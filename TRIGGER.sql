-- 트리거(TRIGGER)
-- : 테이블에 INSERT, UPDATE, DELETE등의 DML 의해
--  변경될 때 자동으로 수행할 내용을 정의하여 저장한 객체이다.
CREATE OR REPLACE TRIGGER TRG_01 AFTER 
  INSERT ON EMPLOYEE
BEGIN
  DBMS_OUTPUT.PUT_LINE('신입사원이 입사했습니다.');
END;
/

INSERT 
  INTO EMPLOYEE
(
  EMP_ID, EMP_NAME, EMP_NO, EMAIL, PHONE
, DEPT_CODE, JOB_CODE, SAL_LEVEL, SALARY, BONUS
, MANAGER_ID, HIRE_DATE, ENT_DATE, ENT_YN
)
VALUES
(
  301, '길성춘', '650512-1151432', 'gil_sc@kh.or.kr', '01012343578'
, 'D5', 'J3', 'S5', 3000000, 0.1
, 200, SYSDATE, NULL, DEFAULT
);

CREATE TABLE PRODUCT(
  PCODE NUMBER PRIMARY KEY,
  PNAME VARCHAR2(30),
  BRAND VARCHAR2(30),
  PRICE NUMBER,
  STOCK NUMBER DEFAULT 0
);

CREATE TABLE PRO_DETAIL(
  DCODE NUMBER PRIMARY KEY,
  PCODE NUMBER,
  PDATE DATE,
  AMOUNT NUMBER,
  STATUS VARCHAR2(10) CHECK(STATUS IN ('입고', '출고')),
  FOREIGN KEY(PCODE) REFERENCES PRODUCT(PCODE)
);

CREATE SEQUENCE SEQ_PCODE;
CREATE SEQUENCE SEQ_DCODE;

INSERT 
  INTO PRODUCT
(
  PCODE
, PNAME
, BRAND
, PRICE
, STOCK
)
VALUES
(
  SEQ_PCODE.NEXTVAL
, '갤럭시노트8'
, '삼송'
, 900000
, DEFAULT
);

INSERT 
  INTO PRODUCT
(
  PCODE
, PNAME
, BRAND
, PRICE
, STOCK
)
VALUES
(
  SEQ_PCODE.NEXTVAL
, '아이펀8'
, '애펄'
, 900000
, DEFAULT
);

INSERT 
  INTO PRODUCT
(
  PCODE
, PNAME
, BRAND
, PRICE
, STOCK
)
VALUES
(
  SEQ_PCODE.NEXTVAL
, '대륙폰'
, '샤우미'
, 300000
, DEFAULT
);

SELECT 
       P.* 
  FROM PRODUCT P;

SELECT 
       PD.* 
  FROM PRO_DETAIL PD;

-- 행 트리거 : 컬럼의 각각의 행의 데이터에 행 변화가 생길 때 마다 실행되며,
--             그 데이터 행의 실제 값을 제어할 수 있다.
-- 문장 트리거 : 트리거 사건에 의해 단 한번만 실행되며, 컬럼의 각 데이터 행을
--               제어할 수 없다.

-- PRO_DETAIL 테이블에 데이터 삽입(INSERT)시
-- STATUS 컬럼 값에 따른 PRODUCT 테이블 STOCK 컬럼 값 변경 트리거 생성
CREATE OR REPLACE TRIGGER TRG_02 AFTER
  INSERT ON PRO_DETAIL
  FOR EACH ROW
BEGIN
  IF :NEW.STATUS = '입고'
    THEN 
      UPDATE PRODUCT P
         SET P.STOCK = P.STOCK + :NEW.AMOUNT
       WHERE P.PCODE = :NEW.PCODE;
  END IF;
  IF :NEW.STATUS = '출고'
    THEN 
      UPDATE PRODUCT P
         SET P.STOCK = P.STOCK - :NEW.AMOUNT
       WHERE P.PCODE = :NEW.PCODE;
  END IF;
END;
/

SELECT 
       P.* 
  FROM PRODUCT P;
  
SELECT PD.* 
  FROM PRO_DETAIL PD;

INSERT 
  INTO PRO_DETAIL
(
  DCODE, PCODE, PDATE
, AMOUNT, STATUS
)
VALUES
(
  SEQ_DCODE.NEXTVAL, 1, SYSDATE
, 5, '입고'
);

INSERT 
  INTO PRO_DETAIL
(
  DCODE, PCODE, PDATE
, AMOUNT, STATUS
)
VALUES
(
  SEQ_DCODE.NEXTVAL, 2, SYSDATE
  , 10, '입고'
);

INSERT 
INTO PRO_DETAIL
(
  DCODE, PCODE, PDATE
, AMOUNT, STATUS
)
VALUES
(
  SEQ_DCODE.NEXTVAL, 3, SYSDATE
, 20, '입고'
);

INSERT 
  INTO PRO_DETAIL
(
  DCODE, PCODE, PDATE
, AMOUNT, STATUS
)
VALUES
(
  SEQ_DCODE.NEXTVAL, 1, SYSDATE
, 1, '출고'
);

INSERT 
  INTO PRO_DETAIL
(
  DCODE, PCODE, PDATE
, AMOUNT, STATUS
)
VALUES
(
  SEQ_DCODE.NEXTVAL, 2, SYSDATE
, 5, '출고'
);

INSERT 
  INTO PRO_DETAIL
(
  DCODE, PCODE, PDATE
, AMOUNT, STATUS
)
VALUES
(
  SEQ_DCODE.NEXTVAL, 3, SYSDATE
, 13, '출고'
);